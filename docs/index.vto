---
layout: main.vto
title: Butterfloat
order: 0
tags: ['top']
---

<section class="hero">
    <div class="hero-body">
        <div class="container has-text-centered">
            <img src="{{ "/assets/butterfloat.svg" |> url }}" alt="Butterfloat Logo in many colors; based on Boxing glove shape by Lorc under CC BY 3.0" width="128" height="128">

            <p class="title">
                Butterfloat
            </p>
            <p class="subtitle">
                "The greatest view engine the web has ever seen."
            </p>
        </div>
    </div>
</section>

<section class="section">
    <div class="container">
        <div class="content">
            <p><strong>Butterfloat</strong> is a Knockout-inspired view engine using modern ESM via Typescript and pure RxJS observables.</p>
        </div>

        <div class="grid">
            <div class="card">
                <header class="card-header">
                    <p class="card-header-title">Knockout-inspired</p>
                </header>
            </div>

            <div class="card">
                <header class="card-header">
                    <p class="card-header-title">TSX for type safety, but not a virtual DOM</p>
                </header>
            </div>

            <div class="card">
                <header class="card-header">
                    <p class="card-header-title">Pure RxJS Observables</p>
                </header>
            </div>

            <div class="card">
                <header class="card-header">
                    <p class="card-header-title">Runtime-dependency light (just RxJS)</p>
                </header>
            </div>

            <div class="card">
                <header class="card-header">
                    <p class="card-header-title">Compile-time dependency light (Typescript encouraged)</p>
                </header>
            </div>
        </div>
    </div>
</section>

<section class="section">
    <div class="container grid">
        <a class="button is-primary is-large" href="/getting-started/">
            <span class="icon">
                <i class="fa-duotone fa-regular fa-play is-full-width"></i>
            </span>
            <span>Getting Started</span>
        </a>
        <a class="button is-link is-large is-full-width" href="/guides/">
            <span class="icon">
                <i class="fa-duotone fa-regular fa-book"></i>
            </span>
            <span>Guides</span>
        </a>
        <a class="button is-info is-large is-full-width" href="/types/">
            <span class="icon">
                <i class="fa-duotone fa-regular fa-code"></i>
            </span>
            <span>API Reference</span>
        </a>
        <a class="button is-light is-large is-full-width" href="/motivation/">
            <span class="icon">
                <i class="fa-duotone fa-regular fa-thought-bubble"></i>
            </span>
            <span>Motivation</span>
        </a>
        <a class="button is-dark is-large is-full-width" href="https://github.com/WorldMaker/butterfloat" target="_blank" rel="noopener">
            <span class="icon">
                <i class="fa-duotone fa-regular fa-code-compare"></i>
            </span>
            <span>GitHub</span>
        </a>
    </div>
</section>

{{ include "paginator.vto" }}

<script type="module">
// Redirect old hash links
const regex = /^#\/(?<path>[^\?]+)(\?id=(?<id>[^&]+))?/
const match = location.hash.match(regex)
if (match) {
    const { path, id } = match.groups
    if (path && id) {
        location.href = `{{ "/" |> url }}${path}/#${id}`
    } else if (path) {
        location.href = `{{ "/" |> url }}${path}/`
    }
}
</script>
